"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SPPurge = void 0;
var path = require("path");
var api_1 = require("./api");
var content_1 = require("./api/content");
var context_1 = require("./api/context");
var utils_1 = require("./utils");
var logger_1 = require("./utils/logger");
var SPPurge = (function () {
    function SPPurge() {
        this.webPathsCache = [];
        this.restApi = new api_1.Delete();
    }
    SPPurge.prototype.delete = function (context, options) {
        var _this = this;
        if (typeof options.fileRegExp === 'object' &&
            typeof options.fileRegExp.test === 'function') {
            return new content_1.Content().getFolderContent(context, options.folder)
                .then(function (_a) {
                var files = _a.files;
                return __awaiter(_this, void 0, void 0, function () {
                    var _i, files_1, file;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                _i = 0, files_1 = files;
                                _b.label = 1;
                            case 1:
                                if (!(_i < files_1.length)) return [3, 4];
                                file = files_1[_i];
                                if (!options.fileRegExp.test(file.ServerRelativeUrl)) return [3, 3];
                                logger_1.logger.info("[" + (0, utils_1.formatTime)(new Date()) + "]", 'SPPurge:', file.ServerRelativeUrl, '(delete)');
                                return [4, this.restApi.deleteFile(context, file.ServerRelativeUrl)];
                            case 2:
                                _b.sent();
                                _b.label = 3;
                            case 3:
                                _i++;
                                return [3, 1];
                            case 4: return [2];
                        }
                    });
                });
            });
        }
        else {
            var filePath = options.filePath;
            var folderPath = options.folder || '';
            if (typeof options.filePath === 'undefined') {
                if (typeof options.localFilePath !== 'undefined' &&
                    typeof options.localBasePath !== 'undefined') {
                    filePath = path.resolve(options.localFilePath)
                        .replace(path.resolve(options.localBasePath), '');
                }
            }
            var fileUri = context.siteUrl + "/" + folderPath + "/" + filePath;
            fileUri = fileUri.replace(/\\/g, '/').replace(/\/+/g, '/');
            fileUri = fileUri.replace('http:/', '').replace('https:/', '');
            fileUri = fileUri.replace(fileUri.split('/')[0], '');
            logger_1.logger.info("[" + (0, utils_1.formatTime)(new Date()) + "]", "SPPurge: " + decodeURIComponent(fileUri) + " (delete)");
            return this.restApi.deleteFile(context, fileUri);
        }
    };
    SPPurge.prototype.deleteFileByAbsolutePath = function (creds, fileAbsolutePath) {
        var _this = this;
        var fileAbsPath = (0, utils_1.escapeUriPath)(fileAbsolutePath);
        return this.getWebByAnyChildUrl(creds, fileAbsolutePath).then(function (siteUrl) {
            var opts = {
                filePath: fileAbsPath.replace(siteUrl + "/", '')
            };
            return _this.delete({ siteUrl: siteUrl, creds: creds }, opts);
        });
    };
    SPPurge.prototype.getWebByAnyChildUrl = function (creds, fileAbsolutePath) {
        return __awaiter(this, void 0, void 0, function () {
            var fileAbsPath, wpc, Url, webUrl, folder;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        fileAbsPath = (0, utils_1.escapeUriPath)(fileAbsolutePath);
                        wpc = [];
                        wpc = this.webPathsCache.filter(function (_a) {
                            var folders = _a.folders;
                            return folders.filter(function (f) {
                                return fileAbsPath.indexOf(f) !== -1;
                            }).length > 0;
                        });
                        if (wpc.length > 0) {
                            return [2, wpc[0].webUrl];
                        }
                        return [4, new context_1.Context(creds).getWebByAnyChildUrl(fileAbsPath)];
                    case 1:
                        Url = (_a.sent()).Url;
                        webUrl = (0, utils_1.escapeUriPath)(Url);
                        folder = webUrl + "/" + fileAbsPath.replace(webUrl + "/", '').split('/')[0];
                        wpc = this.webPathsCache.filter(function (w) { return w.webUrl === webUrl; });
                        if (wpc.length === 0) {
                            this.webPathsCache.push({
                                webUrl: webUrl,
                                folders: [folder]
                            });
                        }
                        return [2, webUrl];
                }
            });
        });
    };
    return SPPurge;
}());
exports.SPPurge = SPPurge;
var sppurge = new SPPurge();
var purge = sppurge.delete.bind(sppurge);
exports.default = purge;
//# sourceMappingURL=SPPurge.js.map